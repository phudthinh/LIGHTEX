@model LIGHTEX.Models.CustomerViewModel;
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "_Layout";
}
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@using LIGHTEX.Data
@using Microsoft.AspNetCore.Http
@using System.Diagnostics;
@using System.Globalization;
@using System.Linq;
@using Microsoft.EntityFrameworkCore;

@inject IHttpContextAccessor HttpContextAccessor
@{
    int count = 0;
    var context = HttpContextAccessor?.HttpContext?.RequestServices.GetService(typeof(LIGHTEXContext)) as LIGHTEXContext;
    var username = HttpContextAccessor?.HttpContext?.User?.Identity?.Name;
    var account = await context.Account.FirstOrDefaultAsync(c => c.username == username && c.permission == 0);
    var customer = await context.Customer.FirstOrDefaultAsync(c => c.username == username);
    var id_customer = 0;
    if (customer != null)
    {
        id_customer = customer.id_customer;
    }
    var carts = await context.Cart
        .Where(c => c.id_customer == id_customer)
        .Join(context.Product,
            cart => cart.id_product,
            product => product.id_product,
            (cart, product) => new { Cart = cart, Product = product })
        .ToListAsync();
    if (account == null)
    {
        <script>
            window.location.href = "/Login/Index";
        </script>
    }
}
<body>
    <div class="container mx-auto px-4 flex flex-col justify-center w-full h-full py-10">
        <h1 class="text-2xl lg:text-4xl text-black font-bold mb-4 text-center">Giỏ hàng</h1>
        <form method="post" action="@Url.Action("Checkout", "Home")">
            <input type="hidden" name="id_customer" value="@customer.id_customer" />
            <div class="rounded-lg overflow-hidden">
                <table class="w-full">
                    <thead>
                        <tr class="h-14 w-full bg-[#6D7CD3] text-[#FFFFFF]">
                            <td class="w-[10%] px-3 py-1"><div class="w-full flex justify-center items-center"><input type="checkbox" class="h-5 w-5" id="check-all"></div></td>
                            <th class="w-[50%] px-3 py-1 text-center">Sản phẩm</th>
                            <th class="w-[15%] px-3 py-1 text-start">Đơn giá</th>
                            <th class="w-[15%] px-3 py-1 text-start">Số lượng</th>
                            <th class="w-[10%]"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cart in carts)
                        {
                            <tr class="h-14 w-full last:rounded-b-lg @(count++ % 2 == 0 ? "bg-[#ececec]" : "bg-[#FFFFFF] border-y border-[#cccccc]")">
                                <td class="w-[10%] px-3 py-1">
                                    <div class="w-full flex justify-center items-center">
                                        <input type="checkbox" class="check-item h-5 w-5" name="selectedCarts[]" value="@cart.Cart.id_cart">
                                </td>
                                <td class="w-full px-3 py-1 flex gap-2">
                                    <img class="w-20 h-auto" src="data:image/png;base64,@(Convert.ToBase64String(cart.Product.image))" alt="image" />
                                    <div class="flex flex-col h-20">
                                        <p class="hidden md:block overflow-hidden overflow-ellipsis text-xl text-start font-bold h-6">@cart.Product.name</p>
                                        <p class="hidden md:block overflow-hidden overflow-ellipsis text-justify h-14 pt-2 cart__item-information">@cart.Product.information</p>
                                    </div>
                                </td>
                                <td class="w-[15%] px-3 py-1"><p class="overflow-hidden overflow-ellipsis">@cart.Product.price.ToString("N0", CultureInfo.CreateSpecificCulture("de-DE")).Replace(",", ".")đ</p></td>
                                <td class="w-[15%] h-full px-3 py-1">
                                    <div class="flex items-center justify-start gap-1 md:gap-3">
                                        <div class="px-2 py-1 rounded-md text-center text-white bg-[#6D7CD3] hover:bg-[#4153AD] hover:cursor-pointer cannot__select minusButton">-</div>
                                        <p class="numberItem">@cart.Cart.quantity</p>
                                        <input type="hidden" name="quantities[@cart.Cart.id_cart]" class="numberItemValue" value="@cart.Cart.quantity" />
                                        <div class="px-2 py-1 rounded-md text-center text-white bg-[#6D7CD3] hover:bg-[#4153AD] hover:cursor-pointer cannot__select plusButton">+</div>
                                    </div>
                                </td>
                                <td class="w-[10%] px-3 py-1">
                                    <div class="group w-4 h-4 md:hover:scale-125 hover:cursor-pointer md:hover:rotate-90 transition-all delete-cart" data-cart-id="@cart.Cart.id_cart">
                                        <svg class="fill-[#333333] w-full h-full group-hover:fill-[#FF0000]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 63.71 63.71">
                                            <path d="M266.2,392.63a2.16,2.16,0,0,1,3.06-3.06l28.17,28.17,28.18-28.17a2.16,2.16,0,0,1,3.06,3.06L300.5,420.81,328.67,449a2.16,2.16,0,0,1-3.06,3.06l-28.18-28.17L269.26,452A2.16,2.16,0,0,1,266.2,449l28.17-28.17Z" transform="translate(-265.58 -388.95)" />
                                        </svg>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @if (ViewBag.ErrorMessage != null)
            {
                <p class="mt-4 text-[#FF0000]">@ViewBag.ErrorMessage</p>
            }
            <div class="w-full flex flex-col md:flex-row md:justify-between items-center mt-4">
                <div class="w-full md:w-[50%] flex flex-col justify-start items-start gap-2">
                    <div class="flex gap-2">
                        <input type="radio" id="A" name="payments" value="0" checked>
                        <p for="A">Thanh toán khi nhận hàng</p>
                    </div>
                    <div class="flex gap-2">
                        <input type="radio" id="B" name="payments" value="1">
                        <p for="B">Thanh toán bằng ví LIGHTEX</p>
                    </div>
                </div>
                <div class="w-[50%] flex justify-end items-center mt-4 md:mt-0">
                <button type="submit" class="px-6 py-2 rounded-md text-white bg-[#FF6827] hover:bg-[#FF6827]/[.9] font-medium">Thanh toán</button>
                </div>
            </div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        const minusButtons = document.querySelectorAll('.minusButton');
        const plusButtons = document.querySelectorAll('.plusButton');

        minusButtons.forEach((button) => {
          button.addEventListener('click', () => {
            const numberItem = button.nextElementSibling;
            const numberItemValue = numberItem.nextElementSibling;
            let value = parseInt(numberItem.textContent);
            if (value > 1) {
              value--;
              numberItem.textContent = value;
              numberItemValue.value = value;
            }
          });
        });

        plusButtons.forEach((button) => {
          button.addEventListener('click', () => {
            const numberItem = button.previousElementSibling.previousElementSibling;
            const numberItemValue = button.previousElementSibling;
            let value = parseInt(numberItem.textContent);
            value++;
            numberItem.textContent = value;
            numberItemValue.value = value;
          });
        });

        $(document).ready(function () {
            $(document).on('click', '.delete-cart', function () {
                var cartId = $(this).data("cart-id");
                $.ajax({
                    url: "@Url.Action("DeleteCart", "Home")",
                    type: "POST",
                    data: { id_cart: cartId },
                    success: function () {
                        window.location.reload();
                    },
                    error: function () {
                        alert("Có lỗi xảy ra khi xóa cart!");
                    }
                });
            });
        });

        const checkAll = document.querySelector('#check-all');
        const checkboxes = document.querySelectorAll('.check-item');

        checkAll.addEventListener('click', function () {
            for (let i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = checkAll.checked;
            }
        });
    </script>

</body>